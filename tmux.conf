set-option -g default-terminal "tmux-256color"
set-option -g history-limit 16384
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g focus-events on
set -g status-style bg=default
set -g status-justify absolute-centre
set -g status-left-style "none"
set -g message-command-style "fg=#c3ccdc,bg=#2c3043"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#82aaff"
set -g status-style "none,bg=#2c3043"
set -g message-style "fg=#c3ccdc,bg=#2c3043"
set -g pane-border-style "fg=#2c3043"
set -g status-right-length "100"
set -g status-left-length "100"
set -g extended-keys always
setw -g window-status-activity-style "none,fg=#82aaff,bg=#2c3043"
setw -g window-status-separator " "
setw -g window-status-style "none,fg=#c3ccdc,bg=#2c3043"
setw -g window-status-format "#I-#W#F"
setw -g window-status-current-format "#[fg=#9d7cd8,bg=#2c3043]#[fg=#c3ccdc,bg=#9d7cd8]#I-#W#F#[fg=#9d7cd8,bg=#2c3043]"
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

bind r source-file ~/.config/tmux/tmux.conf

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt
#bind l next-window
#bind h previous-window
#bind p paste-buffer

# vi-style controls for copy mode
setw -g mode-keys vi
set -g word-separators " -@"

#disable escape delay
set -s escape-time 0

bind-key -T copy-mode-vi v send -X begin-selection
#bind-key -t vi-copy y copy-pipe "pbcopy"
set -g status-right-length 80
set -g status-interval 1

# clock
set-window-option -g clock-mode-colour colour64 #green

set-option -g status-position top
set -g status off

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Bind function keys.
# bind -n F1 select-window -t 1
# bind -n F2 select-window -t 2
# bind -n F3 select-window -t 3
# bind -n F4 select-window -t 4
# bind -n F5 select-window -t 5
# bind -n F6 select-window -t 6
# bind -n F7 select-window -t 7
# bind -n F8 select-window -t 8
# bind -n F9 select-window -t 9
# bind -n F10 select-window -t 0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @fingers-pattern-0 'i-[0-9a-f]{17}' # Match ec2 instance

run '~/.config/tmux/plugins/tpm/tpm'
# source ~/configs/.tmuxline

set -g @backup-window-style {
  set -gF @window-active-style-backup '#{window-active-style}'
  set -gF @window-style-backup        '#{window-style}'
  set -g window-active-style bg=color017
  set -g window-style        bg=color232
}

set -g @restore-window-style {
  set -gF window-active-style '#{@window-active-style-backup}'
  set -gF window-style        '#{@window-style-backup}'
  set -gu @window-active-style-backup
  set -gu @window-style-backup
}

set -g @resize_step 1
bind -N 'Enter resize mode' -T prefix C-r {set key-table resize; run -C '#{@backup-window-style}' }
bind -N 'Exit resize mode'  -T resize q   {set key-table root;   run -C '#{@restore-window-style}'}
bind -N 'Exit resize mode'  -T resize C-[ {set key-table root;   run -C '#{@restore-window-style}'}
bind -N 'List resize keys'  -T resize ?   {lsk -NT resize}

set -g @resize_step_alert {
  display 'resizeing at intervals of #{@resize_step}'
}

bind -N 'Increase resize step' -T resize \} {
  if -F '#{e|<:#{@resize_step},10}' { set -gF @resize_step '#{e|+:#{@resize_step},1}' }
  run -C '#{@resize_step_alert}'
}

bind -N 'Decreaase resize step' -T resize \{ {
  if -F '#{e|>:#{@resize_step},1}}' { set -gF @resize_step '#{e|-:#{@resize_step},1}' }
  run -C '#{@resize_step_alert}'
}

# resize right-bottom border
bind -N 'Bottom Down' -T resize j run -C {resizep -D '#{@resize_step}'}
bind -N 'Bottom Up'   -T resize k run -C {resizep -U '#{@resize_step}'}
bind -N 'Right Left'  -T resize h run -C {resizep -L '#{@resize_step}'}
bind -N 'Right Right' -T resize l run -C {resizep -R '#{@resize_step}'}

# resize left-top border
bind -N 'Top Down'   -T resize J run -C {selectp -U; resizep -D '#{@resize_step}'; selectp -t !}
bind -N 'Top Up'     -T resize K run -C {selectp -U; resizep -U '#{@resize_step}'; selectp -t !}
bind -N 'Left Left'  -T resize L run -C {selectp -L; resizep -R '#{@resize_step}'; selectp -t !}
bind -N 'Left Right' -T resize H run -C {selectp -L; resizep -L '#{@resize_step}'; selectp -t !}

# swap pane
bind -N 'swap Down'  -T resize c-j {selectp -D; swapp -t !}
bind -N 'swap Up'    -T resize c-k {selectp -U; swapp -t !}
bind -N 'swap Left'  -T resize c-l {selectp -R; swapp -t !}
bind -N 'swap Right' -T resize c-h {selectp -L; swapp -t !}

# Nudge
bind -N 'Nudge Down'  -T resize m-j run -C {resizep -D '#{@resize_step}'; selectp -U; resizep -D '#{@resize_step}'; selectp -t !}
bind -N 'Nudge Up'    -T resize m-k run -C {resizep -U '#{@resize_step}'; selectp -U; resizep -U '#{@resize_step}'; selectp -t !}
bind -N 'Nudge Right' -T resize m-l run -C {resizep -R '#{@resize_step}'; selectp -L; resizep -R '#{@resize_step}'; selectp -t !}
bind -N 'Nudge Left'  -T resize m-h run -C {resizep -L '#{@resize_step}'; selectp -L; resizep -L '#{@resize_step}'; selectp -t !}

# Grow/shrink
bind -N 'Shrink Verticall'    -T resize m-J run -C {resizep -U '#{@resize_step}'; selectp -U; resizep -D '#{@resize_step}'; selectp -t !}
bind -N 'Grow Vertically'     -T resize m-K run -C {resizep -D '#{@resize_step}'; selectp -U; resizep -U '#{@resize_step}'; selectp -t !}
bind -N 'Shrink Horizontally' -T resize m-L run -C {resizep -L '#{@resize_step}'; selectp -L; resizep -R '#{@resize_step}'; selectp -t !}
bind -N 'Grow Horizontally'   -T resize m-H run -C {resizep -R '#{@resize_step}'; selectp -L; resizep -L '#{@resize_step}'; selectp -t !}
